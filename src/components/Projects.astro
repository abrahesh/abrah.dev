---
import TailwindLogo from "../components/icons/TailwindLogo.astro";
import AstroLogo from "../components/icons/AstroLogo.astro";
import ReactLogo from "../components/icons/ReactLogo.astro";
import PreviewIcon from "../components/icons/PreviewIcon.astro";
import PythonLogo from "../components/icons/PythonLogo.astro";
import NotionLogo from "../components/icons/NotionLogo.astro";
import LinkButton from "./LinkButton.astro";

const TAGS = {
  TAILWIND: {
    name: "TailwindCSS",
    class: "bg-[#39a7ff] text-white",
    icon: TailwindLogo,
  },
  ASTRO: {
    name: "Astro",
    class:
      "bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 text-white",
    icon: AstroLogo,
  },
  REACT: {
    name: "React",
    class: "text-[#61DAFB]",
    icon: ReactLogo,
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#4B8BBE] text-[#ffffff]",
    icon: PythonLogo,
  },
  NOTION: {
    name: "Notion",
    class: "bg-[#ffffff] text-[#000000]",
    icon: NotionLogo,
  },
};
const PROJECTS = [
  {
    title: "Mi portafolio abrah.dev",
    description:
      "Mi portafolio creado en Astro, utilizando TailwindCSS para los estilos y desplegado en Vercel. Este proyecto refleja mis habilidades en desarrollo web moderno y diseño responsivo.",
    link: "https://abrah.dev",
    repo: "https://abraeh.dev",
    image: "https://raw.githubusercontent.com/abrahesh/abrah.dev/refs/heads/main/src/assets/projects/portfolio.webp",
    tags: [TAGS.ASTRO, TAGS.TAILWIND],
  },
  {
    title: "Creador de Notion Marketplace",
    description:
      "He diseñado y publicado plantillas originales para el Marketplace de Notion. Utilicé técnicas de web scraping para analizar datos para crear mis plantillas, lo que me permitió optimizar mis diseños y posicionarlos mejor.",
    link: "https://notion.abrah.dev",
    repo: "https://notion.abrah.dev",
    image: "https://raw.githubusercontent.com/abrahesh/abrah.dev/refs/heads/main/src/assets/projects/notion-marketplace.webp",

    tags: [TAGS.NOTION, TAGS.PYTHON],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, repo }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="Imagen de proyecto"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            <a href={repo}>{title}</a>
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {link && (
                <LinkButton href={link}>
                  Preview
                  <PreviewIcon class="size-4" />
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
